Проектування та програмна реалізація
підсистеми створення та використання
онтологічної бази знань публікацій наукового
дослідника
Палагін О.В., Малахов К.С., Величко В.Ю., Щуров О.С.
Інститут кібернетики ім. В.М. Глушкова Національної академії наук України
Київ, Україна
malahov@domt.ml
Анотація.
Проблематика. Створення засобів підтримки наукових
досліджень завжди було і є одним із центральних напрямів
розвитку інформатики. В роботі розглядаються теоретичні
і практичні аспекти розробки перспективних комплексних
знання-орієнтованих інформаційних систем та їх
компонентів.
Мета. Проектування та програмна реалізація підсистеми
створення та використання онтологічної бази знань
публікацій наукового дослідника з наданням сервісів індексації,
зберігання, конструктивізації та формалізації представлення
знань, що отримуються в процесі досліджень, та
колективної взаємодії співвиконавців.
Методи. Аналіз існуючих наукових інформаційних систем
та синтез загальних принципів побудови
“Інструментального комплексу робочого місця наукового
дослідника” та його компонентів.
Результати. Спроектовані та розроблені функціональні
компоненти знання-орієнтованої інформаційної системи
“Інструментальний комплекс робочого місця наукового
дослідника”, зокрема функціональні моделі і програмна
реалізація підсистеми створення та використання
онтологічної бази знань наукового дослідника, як компонент
персоніфікованої бази знань наукового дослідника.
Висновки. Дослідження в сучасних умовах дії парадигми e-
Science вимагає об’єднання ресурсів наукової спільноти й
інтенсивного обміну результатами досліджень, що може
досягатись за рахунок використання наукових інформаційних
систем. "Інструментальний комплекс робочого місця
наукового дослідника" дозволяє вирішувати завдання
конструктивізації та формалізації представлення знань, що
отримуються в процесі досліджень, та колективної взаємодії
співвиконавців.
Ключові слова: персоніфікована база знань, онтологічна
база знань, інструментальний комплекс, наукова
інформаційна система, науковий дослідник, наукове
дослідження, веб-сервіс.
ВСТУП
На поточний стан існує велика кількість наукових
інформаційних систем (НІС), головне завдання яких -
забезпечити науковою інформацією дослідників і наукові
колективи. Наприклад, в університетах багатьох
розвинутих країн світу існують інформаційні системи, в
яких зберігаються дані про наукові проекти та про
виконавців проектів. Однак такі інформаційні системи не
задовольняють вимогам широкого доступу до інформації
залежно від ролі споживача цієї інформації (вчений,
викладач, керівник, інвестор і т.п.). Системи бібліотечних
установ, які здійснюють реферування публікацій,
дозволяють зберігати інформацію про статті, про персони,
дозволяють створювати тематичні каталоги. Але жодна з
наявних організацій Проте бібліотечні установи не мають
достатніх людських ресурсів для збору й аналізу
інформації з усіх журналів і Інтернет ресурсів. Тому
необхідна комплексна автоматизація накопичення
інформації з багатьох джерел. Вирішення такого завдання
потребує інтеграції даних з різноманітних інформаційних
систем про наукові дослідження та публікації.
В рамках програми інформатизації НАН України за
проектом “Розробка методологічних та технологічних
засад побудови архітектури знання-орієнтованої
інформаційної системи підтримки діяльності наукового
дослідника” [1] в Інститут кібернетики ім. В.М. Глушкова
НАНУ розроблені технічні вимоги та архітектура
комплексної інформаційної системи наукових досліджень
(НД), та запроектовані її компоненти для практичної
реалізації у вигляді “Інструментального комплексу
робочого місця наукового дослідника” (ІКРМ НДк). На
основі отриманих результатів розпочато наступний проект
в рамках програми інформатизації НАН України
“Створення проблемно-орієнтованих систем
онтологічного аналізу і синтезу складних об'єктів нової
техніки”, основними задачами якого є практична розробка
та апробація функціональних компонентів знання-
орієнтованого ІКРМ НДк, зокрема, підсистеми створення
та використання онтологічної бази знань публікацій
наукового дослідника (ОБЗП НДк).
АНАЛІЗ ІСНУЮЧИХ НАУКОВИХ ІНФОРМАЦІЙНИХ СИСТЕМ
В англомовному середовищі для позначення наукових
інформаційних систем з'явився стійкий термін - CRIS
(Current Research Information System) [2], що визначає
інформаційну систему для доступу до наукової й
академічної інформації. Важливо підкреслити, що у
визначенні CRIS також вказується що CRIS призначені не
тільки для безпосереднього доступу до інформаційних
ресурсів , але й для [3]:
- спрощення доступу до національних служб
наукової й технічної інформації;
- ідентифікації головних існуючих джерел наукової
інформації й оцінки можливостей доступу до цих
джерел;
- розвитку мережних інструментів, що дозволяють
здійснювати доступ до джерел наукової інформації.
Створено EuroCRIS [4] – професійну організацію
дослідників, керівників наукових груп і інститутів країн
Європейського Союзу по наукових інформаційних
системах. Головне завдання EuroCRIS – поширення
інформації в області наукових інформаційних систем;
створення тезаурусів, стандартів і методології створення
НІС; поширення технологій, необхідних для створення
НІС.
Основні категорії користувачів сучасних НІС та їх
інформаційні потреби наведено в [5]. Ці категорії
користувачів та їх потреби визначають основні види
інформаційних ресурсів, з якими працюють НІС: звіти про
виконану роботу, результати проектів, персональна
інформація, публікації, організації, проекти, наукові
результати, технології, патенти, програми фондів,
експертні оцінки, електронні бібліотеки, енциклопедії та
тлумачні словники, веб-сайти, списки розсилки, соціальні
мережі, бази даних, обчислювальні ресурси, нормативні
документи, освітні й музейні ресурси.
Також категорії користувачів і їх потреби визначають
основні види сервісів, які надають НІС: повторне
використання наукових розробок, методологій,
технологій; пошук та цільове поширення інформації,
служби повідомлення; встановлення горизонтальних
зав’язків між організаціями; архівне зберігання
інформації; підтримка навчального процесу; формування
запитів як дослідників, так і користувачів наукових знань;
забезпечення роботи аналітичних служб.
Аналіз вимог до CRIS по управлінню наукою
проаналізовано в [6], де описано типи діяльності,
інформаційні потреби в управлінні наукою й види
ресурсів, з якими повинна працювати CRIS для
керівників, аналітиків та фінансових фондів. У роботі [7]
наведено вимоги до CRIS для розповсюдження
технологій, організації наукових програм і роботи фондів
з фінансування наукових досліджень. Відзначено
важливість CRIS систем для організації спільної роботи
вчених, для підтримки інформаційної роботи фондів.
Описано базовий життєвий цикл наукових програм і
інформаційні потреби учасників на кожній фазі циклу.
У порталі CORDIS [8] виділено основні види
використання наукових порталів для дослідників:
• доступ до актуальної інформації про досягнення в
науці;
• ідентифікація організацій, що фінансують проекти
для дослідження й створення технологій;
• пошук партнерів для організації наукової
діяльності;
• формування наукових колективів, що можуть
складатись з окремих незалежних груп;
• експорт технологій і їх результатів.
В області наукової комунікації в мережі Інтернет
сьогодні використовуються: сервіси вербальної
безпосередньої взаємодії – Skype та інші засоби;
платформи для проведення вебінарів сервіси
опосередкованого спілкування – електронна пошта;
соціальні сервіси – LinkedIn і т.п. Такі сервіси при
наявності швидкісних каналів зв'язку дозволяють
здійснювати оперативну наукову комунікацію.
До НІС можна віднести системи, у яких поєднуються
технології як спеціалізованої соціальної мережі, так і
звичайного файлового сховища [9]. Як комерційні
проекти, такі системи орієнтовані на використання однієї
з наступних бізнес-моделей:
- продавати дані своїх відвідувачів або
передплатників рекламодавцям, що забезпечує
цільову рекламу, яка зазвичай коштує дорожче
звичайної (ResearchGate) [10];
- проводити аналітику по завантаженому контенту й
підбирати необхідні дослідження за окрему плату
(Academia.edu) [11];
- надавати додаткові платні сервіси для зберігання
матеріалів, організовувати дискусійні площадки
(Mendeley) [12].
Відповідно до потреб саме представників наукового
середовища, можна виділити наступні основні можливості
Academia.edu і ResearchGate, які надаються
зареєстрованим користувачам: завантажувати в систему
свої наукові тексти, які будуть доступні для інших
користувачів; користуватись аналітичними можливостями
систем, зокрема, мати доступ до статистики перегляду
свого профілю, публікацій і завантаження кожної
публікації; виконувати пошук за науковими інтересами
користувачів і встановлювати з ними академічні контакти.
В стрічці новин користувачів повідомлення про нові
публікації будуть з'являтись від користувачів, з якими
встановлено контакти в самому сервісі або при
співпадінні ключових слів статей і інтересів користувачів.
Це сприяє поширенню наукового знання (оприлюдненню
результатів наукових досліджень); Статистика перегляду
публікацій дозволяє визначити країну походження
запиту, сам пошуковий запит і зовнішні ресурси, з яких
відбувся вхід до системи.
Однак, сервіс Academia.edu не розрахований на
комплексну інформаційну підтримку проведення
наукових досліджень, а користувачі у більшості тільки
розміщують в системі опубліковані статті.
На відміну від Academia.edu сервіс ReserchGate має
більше різноманітних засобів. Наприклад, за тематикою
наукових інтересів користувачу можуть бути
запропоновані відповіді на питання, які задані іншим
користувачем (можливість виступити в якості наукового
експерта). Також доступна роль рецензента публікацій,
розміщених у системі (пошук здійснюється за назвами
статей). У системі надається можливість пошуку
цитування своїх статей й відображення інформації про
цитування. Особливістю сервісу ReserchGate є можливість
організації проектів із залученням до спільної роботи над
ними інших користувачів системи, з якими встановлено
академічні контакти. Ця можливість реалізована через
створення іменованого простору якому можна створювати
і розміщати файли, проводити обговорення з іншими
учасниками проекту у вигляді коментарів.
Інтернет-сервіси (Academia.edu, ReserchGate) багато в
чому націлені на формування так званого «імені» вченого
і надання послуг по видачі вакансій за науковими
інтересами користувачів, а також по перегляду профілів
користувачів потенційними роботодавцями, фондами,
керівниками науково-дослідних колективів.
ПРИНЦИПИ ПОБУДОВИ КОМПОНЕНТІВ ІНСТРУМЕНТАЛЬНОГО
КОМПЛЕКСУ РОБОЧОГО МІСЦЯ НАУКОВОГО ДОСЛІДНИКА
Науковими співтовариствами створюються мережі, що
поєднують цифрові бібліотеки, файлові сховища, веб
сервери з науково значимою інформацією. Головним
об’єктивним фактором, який необхідно враховувати при
розробці і використанні робочого місця українського
наукового дослідника, є обмеженість фінансових ресурсів,
що виділяються на розробку та експлуатацію програмного
забезпечення робочого місця, що призводить до
наступних наслідків: неможливість залучення до розробки
необхідної кількості спеціалістів; мінімізація витрат на
освоєння, експлуатацію та оновлення програмного
забезпечення; розробка системи на протязі декількох років
колективом виконавців, склад якого змінюється;
необхідність максимального повторного використання
програмного забезпечення, що вже було розроблено.
Враховуючи наведене вище, визначимо загальні
принципи, на яких повинна будуватись інформаційна
система ІКРМ НДк та її компоненти.
1) Модульність. Розробка будь-якої інформаційної
системи, тим більше такої, що націлена на рішення
комплексу різних завдань, повинна базуватись на
модульному принципі [9]. Реалізація кожного окремого
завдання вирішується в рамках створення окремого
програмного модуля, який у будь-який момент можна
підключити до системи, що дозволяє нарощувати її
функціональні можливості. При модульному принципі
побудови НІС немає необхідності запускати систему після
остаточної розробки всіх складових її сервісів і
компонентів - вона може вводитись в експлуатацію з
мінімальним набором функцій та поступово розвиватись.
Модульна побудова системи дозволяє більш оперативно
виконувати завдання налагодження й тестування як
окремих модулів, так і всієї системи в цілому.
2) Сервіс–орієнтована архітектура. Сервіс–орієнтована
архітектура [13] може розглядатись як стиль архітектури
інформаційних систем, який дозволяє створювати
системи, що побудовані шляхом комбінації окремих
незалежних програм. Програми, такі як веб-сервіси,
можуть викликатись іншими програмами, які виступають
у якості клієнтів або споживачів цих сервісів. Розробнику
не потрібно знати, як працює програма, необхідно лише
дотримуватись угоди про інтерфейс для звернення до
сервісу, та форматів вхідних і вихідних даних. Інтерфейс
сервісу повинен не залежати від платформи. Сервіс–
орієнтована архітектура реалізує масштабованість
сервісів, забезпечує скорочення часу реалізації проекту,
підвищення продуктивності його розробки та
впровадження.
3) Кросплатформеність. Дослідник повинен мати
доступ до сервісів, які забезпечує НІС, з різних типів
пристроїв, що працюють під керуванням різних
операційних систем. Одним з засобів досягнення
кросплатформеності може бути доступ до сервісів через
веб-інтерфейс.
4) Розробка програмного забезпечення за шаблоном
Модель-вигляд-контролер. Модель-вигляд-контролер
(Model-view-controller MVC) – архітектурний шаблон, що
використовується під час проектування та розробки
програмного забезпечення. Цей шаблон поділяє
програмну систему на три частини: модель даних, вигляд
даних та засоби обробки даних. Шаблон MVC
призначений для відокремлення даних (модель) від
інтерфейсу користувача (вигляду) таким чином, щоб
зміни інтерфейсу користувача мінімально впливали на
роботу з даними, а зміни в моделі даних могли
здійснюватися без змін інтерфейсу користувача. Перевага
шаблону – гнучкий дизайн програмного забезпечення,
який полегшує подальші зміни чи розширення програм,
надає можливість повторного використання окремих
компонентів. Крім того. використання цього шаблону у
великих системах призводить до певної впорядкованості
їхньої структури, робить їх більш зрозумілими, завдяки
зменшенню складності окремих компонентів.
5) Взаємодія між компонентами на основі JSON
моделі даних та архітектурного стилю взаємодії
компонентів розподіленого програмного забезпечення
REST (скор. англ. Representational State Transfer,
“передача репрезентативного стану”). JSON – стандарт
побудови мов розмітки ієрархічно структурованих даних
для обміну між різними додатками, зокрема, через
Інтернет. Стандарт визначає метамову, на основі якої,
шляхом запровадження обмежень на структуру та зміст
документів, визначаються специфічні, предметно-
орієнтовані мови розмітки даних. Автор документа
створює його структуру, будує необхідні зв'язки між
елементами, й використовує ті команди, які
задовольняють його вимогам, і домагається такого типу
розмітки, який потрібен йому для виконання операцій з
документами. JSON дозволяє також здійснювати контроль
за коректністю даних, що зберігаються в документах,
робити перевірки ієрархічних співвідношень усередині
документа і встановлювати єдиний стандарт на структуру
документів, що вміщують будь-які дані. Створивши
правильну структуру механізму обміну інформації на
початку роботи над проектом системи, можна уникнути в
майбутньому багатьох проблем, пов'язаних з несумісністю
форматів даних, які використовуються різноманітними
компонентами системи.
6) Максимальне використання вільного та
безкоштовного програмного забезпечення у комплексі
НІС. Особливістю вільного програмного забезпечення є
відкритість кодів програм, відсутність витрат
користувачів на придбання ліцензій, можливість вільного
копіювання та розповсюдження програм, безкоштовність
(або невисока вартість розповсюдження копії при
використанні програми у комплексному рішенні),
можливість модифікації програм і значне скорочення
витрат на розробку на їхній основі рішень, необхідних для
розв’язання конкретних задач використання НІС. Вільне
програмне забезпечення, або його модифіковані версії,
можна поширювати як безкоштовно, так і на комерційній
основі. Використання вільного програмного забезпечення
дозволяє суттєво заощаджувати кошти на етапах розробки
та впровадження НІС.
7) Використання хмарних обчислень. Хмарні
обчислення (cloud computing) можуть забезпечити
взаємодію між різними НІС через Інтернет, при
оптимальному розподілі навантаження між локальними й
віддаленими серверами. У хмарних обчисленнях
комп'ютерні ресурси й потужності надаються
користувачеві як інтернет-сервіси для обробки даних.
Користувач має доступ до власних даних, але не повинен
піклуватися про інфраструктуру, операційну систему й
властивості програмного забезпеченні, з яким працює.
8) Зберігання даних на основі абстракції сховища
даних. Абстрагування програмних модулів від реалізації
технології зберігання даних дозволяє адміністратору
системи самому обирати тип сховища даних, яке
максимально пристосоване для цілей роботи конкретної
конфігурації НІС.
ПЕРСОНІФІКОВАНА БАЗА ЗНАНЬ НАУКОВОГО ДОСЛІДНИКА
Персоніфікована база знань наукового дослідника
(ПфБЗ НДк) – це компонент інструментального комплексу
робочого місця наукового дослідника – відкрита
комп’ютерна база знань, побудована автоматизованим
способом за допомогою заданого, спеціалізованого
інструментарію шляхом комплексної обробки авторських
науково-технічних матеріалів, що опубліковані у
відкритому доступі, чи отриманні від НД у вигляді
експертних знань.
ПфБЗ НДк представлена у комп’ютерній формі у
вигляді онтологічної бази знань і формально описана на
деякій мові першого порядку.
ПфБЗ призначена для [1]:
- опису максимального наближення до точного
онтографічного подання знань НД;
- структурно-семантичного аналізу НДк своїх знань,
їх поповнення, оновлення та підтримки в
актуальному стані, в том числі для підготовки до
наступних НД;
- інформаційного забезпечення й орієнтації: розвитку
персоніфікованих знань для побудови
морфологічних таблиць онтографічної технології
наукової та технічної творчості; для інструменту
автоматизації написання наукових статей, заявок на
отримання патентів та інших науково-технічних
документів;
- онтолого-орієнтованого інформаційно-довідкового
забезпечення НДк;
- уточнення, розширення та розвитку загального
фрагмента ПфБЗ НДк і онтології основної
предметної дисципліни, в якій проводяться НД;
- формування тематичної спрямованості нових НД;
- планування розробки нових наукових теорій для
вирішення прикладних задач;
- формулювання запитів на отримання нової,
тематично спрямованої інформації;
- підтримки виконання конкретного наукового
проекту.
Архітектура ПфБЗ НДк представлена сукупністю
блоків та підсистем: онтологічна база знань предметної
області (ПрО), підсистема створення та використання
онтологічної бази знань публікацій наукового дослідника
(ОБЗП НДк), блок системного аналізу, об’єкти
інтелектуальної власності автора (зокрема патенти),
лінгвістичний корпус ПрО, інформація про поточний
проект.
ПРОЕКТУВАННЯ ФУНКЦІОНАЛЬНОЇ МОДЕЛІ ПІДСИСТЕМИ
ОНТОЛОГІЧНОЇ БАЗИ ЗНАНЬ ПУБЛІКАЦІЙ НАУКОВОГО
ДОСЛІДНИКА.
Основною підсистемою ПфБЗ НДк є онтологічна база
знань публікацій наукового дослідника, що включає у
себе додану НДк, зібрану в мережі Інтернет
спеціалізованим “роботом-павуком” та отриману від
інших CRIS-систем інформацію з різних предметних
областей, та кластери онтологій та онтологічних структур,
що в напівавтоматичному режимі побудовані програмним
забезпеченням на основі отриманої інформації.
Для проектування функціональної моделі підсистеми
ОБЗП НДк була використана загальноприйнята
стандартна методологія і мова функціонального
моделювання UML. UML є де-факто стандартом об'єктно-
орієнтованої візуальної мови моделювання. В UML є три
основні види моделей [14]: статична модель (statіc model),
динамічна модель (dynamіc model), фізична модель
(physіcal model).
Статична модель описує елементи системи та їх
відношення (класи, атрибути, оператори). Однією з
реалізацій статичної моделі є діаграма класів (class
dіagram). Динамічна модель описує поведінку системи,
наприклад, зміна програмних сутностей (software entіtіes)
під час виконання додатка. До динамічних моделей
відносяться: діаграма прецедентів, варіантів використання
(use case dіagram); діаграма активності (actіvіty dіagram).
Фізична модель відображає незмінну структуру
програмних сутностей, зокрема файлів програмного коду,
бібліотек, що виконуються та відношення між ними.
До підсистеми ОБЗП НДк входять наступні сутності,
блоки та функції:
- сутність “Науковий дослідник”;
- блок “Підсистема управління колективним
проектом”;
- блок управління графічним редактором
онтологічних структур;
- блок управління пошуком наукової інформації в
зовнішніх джерелах (в мережі Internet);
- блок обробки лінгвістичної інформації для
онтологічної репрезентації текстів – ІТ-платформа
ТОДОС (Трансдисциплінарні Онтологічні Діалоги
Об’єктно-орієнтовних Систем) [15];
- блок документо-орієнтованого сховища – сервер
системи керування базами даних (СКБД)
MongoDB;
- функція графічного представлення онтологічних
структур, онтологій та наукової інформації;
- функція запису/зчитування інформації у вигляді
оригіналів публікацій НДк, JSON та XML
документів, онтологічних структур, онтологій в
СКБД MongoDB.
- функція локальної роботи з даними;
- функція повнотекстового пошуку по публікаціям
НДк, онтологіям та онтологічним структурам;
- функція індексації та розмітки оригіналів
публікацій НДк для повнотекстового пошуку;
- функція семантичного аналізу текстових
документів;
- функція автентифікації НДк;
- функція автоматичного машинного перекладу
публікацій НДк з англійської та російської на
українську мову;
- функція лематизації словоформ для української
мови;
- функція екстракту тексту з документів форматів
pdf, doc та docx;
Функціональні моделі ІКРМ НДк та його компонентів,
а саме динамічні моделі у вигляді UML-діаграм варіантів
використання, наведені в [1]. Отримані результати
проектування функціональних моделей компонентів ІКРМ
НДк дозволили перейти до їх програмної реалізації,
зокрема підсистеми ОБЗП НДк.
ПРОГРАМНА РЕАЛІЗАЦІЯ ПІДСИСТЕМИ ОНТОЛОГІЧНОЇ БАЗИ
ЗНАНЬ ПУБЛІКАЦІЙ НАУКОВОГО ДОСЛІДНИКА
Програмна реалізація підсистеми ОБЗП НДк була
виконана з дотриманням наведених вище принципів
розробки комплексних інформаційних систем.
Для практичної програмної реалізації ОБЗП НДк було
обрано формат веб-сервісів та веб-застосунку, що
дозволило створити гнучке та багатофункціональне
програмне забезпечення з сервіс-орієнтованою
розподіленою архітектурою та задіянням “хмарних”
технологій. За допомогою цих сервісів та веб-застосунку
можна ефективно будувати кластери онтологій,
здійснювати пошук, зберігання, синтаксично-семантичний
аналіз текстових документів, та інше.
Основою розробки програмної реалізації став стек
технологій серверного програмного забезпечення MEAN
(абр. від MongoDB, Express.js, Angular.js, Node.js). Стек
технологій MEAN відображає сучасний підхід до веб-
розробки: на кожному рівні архітектури застосунку, від
клієнта до сервера і персистентності, застосовується одна
й та сама мова програмування, зокрема в даному випадку
– JavaScript. В існуючій експериментальній версії
програмної реалізації замість JavaScript-фреймворка
Angular.js були використані JavaScript-бібліотека jQuery та
підхід до побудови користувацьких інтерфейсів веб-
застосунків – AJAX (Asynchronous JavaScript And XML).
На рис. 1 наведено узагальнену структурну схему
програмної реалізації ОБЗП НДк з використанням стека
MEAN та зміною Angular.js на jQuery та AJAX. Детальний
опис стека MEAN та його компонентів представлено у
[16,17].
Рис. 1. Узагальнена структурна схема програмної реалізації ОБЗП НДк з
використанням стека MEAN.
Розроблене програмне забезпечення умовно можна
поділити на дві складові частини:
1. Веб-сервіс у вигляді RESTful API, що реалізує
функціональне наповнення ОБЗП НДк та працює,
як самостійний сервіс, так і інтегрований з веб-
застосунком ОБЗП НДк.
2. Веб-застосунок, який забезпечує взаємодію НДк з
системою та використання її сервісів.
Клієнтська частина реалізована у вигляді
односторінкового веб-застосунку (англ. single-page
application, SPA), що забезпечує НДк досвід, близький до
користування настільною програмою. Інтерфейс
користувача веб-застосунку складається з вікна виводу
результату та трьох логічно поділених вкладок: пошук по
ОБЗП НДк, завантаження нових даних, налаштувань
сервісу з формою, яка за рахунок авторизації користувача
та блоку налаштувань дозволяє користувачеві, виходячи з
власних потреб, індивідуально налаштовувати інтерфейс
та відображати лише необхідні для роботи ОБЗП НДк, що
розташовуються у окремих вкладках форми. Такий
формат відображення сервісу при потребі дозволяє
додавати нові елементи сервісу та розширяти його
функціональність у майбутньому, не привносячи значних
змін у HTML та CSS код сторінки та зовнішній вид веб-
сервісу, що спрощує його розвиток та обслуговування у
майбутньому та виключає адаптаційні складнощі
постійних користувачів веб-сервісу при переході на його
оновлену версію.
Сервісна частина ОБЗП НДк реалізована з
використанням СКБД MongoDB, що здійснює управління
наборами документів у форматі JSON. Для реалізації
управління ОБЗП НДк в СКБД MongoDB була розроблена
JSON специфікація опису метаданих публікацій автора.
Логіка роботи сервісу, обробка запитів користувача,
пошук та аналіз даних на веб-сервері побудовано на
програмній платформі з відкритим початковим кодом
Node.js, яка працює на рушії JavaScript від Google – V8 та
призначена для відокремленого виконання
високопродуктивних мережних застосунків на мові
JavaScript. Node.js характеризується асинхронною
однопотоковою моделлю виконання запитів, засновану на
обробці подій в неблокуючому режимі.
ЗАКЛЮЧЕННЯ
Створення засобів підтримки наукових досліджень
завжди було і є одним із центральних напрямів розвитку
практичної інформатики. Головними особливостями
сучасного моменту розвитку наукових досліджень є
трансдисциплінарний підхід і глибока інтелектуалізація
всіх етапів життєвого циклу постановки і вирішення
наукових проблем. Дослідження в сучасних умовах дії
парадигми e-Science з дуже складними та масштабними
експериментами й спостереженнями, вивченням явищ на
перетині галузей науки (міждисциплінарні та
трансдисциплінарні дослідження), вимагає об’єднання
ресурсів всієї наукової спільноти, розподілення всього
об’єму досліджень між окремими науковцями та
науковими колективами й інтенсивного обміну
результатами досліджень. Для реалізації цих можливостей
спроектовані та розроблені функціональні компоненти
знання-орієнтованої інформаційної системи ІКРМ НДк,
зокрема функціональні моделі і програмна реалізація
підсистеми створення та використання ОБЗП НДк, як
компоненту ПфБЗ НДк.
ЛІТЕРАТУРА
1. Звіт за проектом ВК 205.34.15 “Розробка
методологічних та технологічних засад побудови
архітектури знання-орієнтованої інформаційної
системи підтримки діяльності наукового дослідника” –
№ держреєстрації 0115U003529, К., 2015, – 134 с.
2. Nikos Houssos. CRIS for research information manage-
ment [Електронний ресурс] / 9th euroCRIS Strategic
Seminar, September 12th -13th, 2011 Brussels. – Режим
доступа http://hdl.handle.net/11366/303 (дата звернення
08.07.2016).
3. ERGO - European Research Gateways Online
[Електронний ресурс]. – Режим доступа
http://cordis.europa.eu/news/rcn/8259_en.html (дата
звернення 08.07.2016).
4. EuroCRIS - Current Research Information Systems. The
International Organisation for Research Information
[Електроний ресурс]. – Режим доступа
http://www.eurocris.org/ (дата звернення 08.07.2016).
5. Лопатенко А.С. Научные Информационные Системы.
Перспективы использования. [Електроний ресурс]. –
Режим доступа
http://derpi.tuwien.ac.at/~andrei/CRIS_DOC.htm (дата
звернення 08.07.2016).
6. Niclas Lindgren, Anita Rautam?ki. Managing Strategic
Aspects of Research [Електронний ресурс]. – Режим
доступа
ftp://ftp.cordis.europa.eu/pub/cris2000/docs/rautamdki_full
text.pdf (дата звернення 08.07.2016).
7. Peter Dew, Christine Leigh, Bill Whyte. ADVISER II:
Theory and practice of finding and presenting RTD results
[Електроний ресурс] / CRIS-2000.
8. CORDIS Mini-guide. [Електронний ресурс]. – Режим
доступа http://cordis.europa.eu/pub/guidance/docs/cordis-
miniguide11_en.pdf (дата звернення 08.07.2016).
9. Прокудин Д.Е. Проектирование и реализация ком-
плексной информационной системы поддержки науч-
ных исследований/Технологии информационного об-
щества в науке, образовании и культуре: сборник
научных статей. Материалы XVII Всероссийской объ-
единенной конференции «Интернет и современное
общество» IMS-2014, Санкт-Петербург, 19 - 20 ноября
2014 г. – с. 31-36.
10. ResearchGate About us [Електронний ресурс]. – Режим
доступа http://www.researchgate.net/about (дата
звернення 08.07.2016).
11. Academia.edu - Share research [Електронний ресурс]. –
Режим доступа https://www.academia.edu/ (дата
звернення 08.07.2016).
12. Free reference manager and PDF organizer [Електронний
ресурс]. – Режим доступа https://www.mendeley.com/
(дата звернення 08.07.2016).
13. OASIS Reference Model for Service Oriented Architecture
V 1.0 [Електронний ресурс]. – Режим доступа
http://www.oasis-
open.org/committees/download.php/19679/soa-rm-cs.pdf
(дата звернення 08.07.2016).
14. C. Marshall, Enterprise Modelling with UML, ISBN 0-
201- 43313-3, Addison-Wesley, Reading, MA, 2000.
15. Величко В.Ю. Комплексные инструментальные сред-
ства инженерии онтологий / В.Ю. Величко, К.С.
Малахов, В.В. Семенков, А.Е. Стрижак // International
Journal “INFORMATION MODELS & ANALYSES”
Volume 3 / Number 4. – FOI ITHEA Sofia, Bulgaria. –
2014. – pp.336-361.
16. Хролович Д.В. Введение в MEAN stack // Science Time.
2014. №8 (8) С.321-324.
17. Brad Dayley. Node.js, MongoDB and AngularJS Web
Development. Addison-Wesley Professional, Jun 5, 2014 –
Computers - 800 p.
